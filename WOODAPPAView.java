/*
 * WOODAPPAView.java
 */

package woodappa;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.util.HashMap.*;
/**
 * The application's main frame.
 */

public class WOODAPPAView extends FrameView {
public int rate,qty;
public int tamount;
public DefaultTableModel model;
LinkedHashMap<Integer,String> hm=new LinkedHashMap<Integer,String>(); 

public WOODAPPAView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
             //   statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                //statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
      //  statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
             //           statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
             //       progressBar.setVisible(true);
             //       progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
             //       statusAnimationLabel.setIcon(idleIcon);
             //       progressBar.setVisible(false);
                   // progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    //statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
              //      progressBar.setVisible(true);
            //        progressBar.setIndeterminate(false);
          //          progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = WOODAPPAApp.getApplication().getMainFrame();
            aboutBox = new WOODAPPAAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        WOODAPPAApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        table_no_cp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        table_no = new javax.swing.JTextField();
        jb1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jta = new javax.swing.JTextField();
        jtb = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jadd = new javax.swing.JButton();
        jac = new javax.swing.JTextField();
        tom = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(woodappa.WOODAPPAApp.class).getContext().getResourceMap(WOODAPPAView.class);
        mainPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, resourceMap.getColor("mainPanel.border.matteColor"))); // NOI18N
        mainPanel.setFont(resourceMap.getFont("mainPanel.font")); // NOI18N
        mainPanel.setName("mainPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setName("jTable2"); // NOI18N
        jScrollPane3.setViewportView(jTable2);

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jt1.setFont(resourceMap.getFont("jt1.font")); // NOI18N
        jt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM_NAME", "QTY", "RATE", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jt1.setCellSelectionEnabled(true);
        jt1.setName("jt1"); // NOI18N
        jt1.setSurrendersFocusOnKeystroke(true);
        jScrollPane4.setViewportView(jt1);
        jt1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jt1.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jt1.columnModel.title1")); // NOI18N
        jt1.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jt1.columnModel.title2")); // NOI18N
        jt1.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jt1.columnModel.title3")); // NOI18N
        jt1.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jt1.columnModel.title4")); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        table_no_cp.setFont(resourceMap.getFont("table_no_cp.font")); // NOI18N
        table_no_cp.setText(resourceMap.getString("table_no_cp.text")); // NOI18N
        table_no_cp.setName("table_no_cp"); // NOI18N
        table_no_cp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                table_no_cpKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                table_no_cpKeyTyped(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        table_no.setText(resourceMap.getString("table_no.text")); // NOI18N
        table_no.setName("table_no"); // NOI18N
        table_no.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                table_noInputMethodTextChanged(evt);
            }
        });
        table_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                table_noKeyTyped(evt);
            }
        });

        jb1.setText(resourceMap.getString("jb1.text")); // NOI18N
        jb1.setName("jb1"); // NOI18N
        jb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb1ActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(woodappa.WOODAPPAApp.class).getContext().getActionMap(WOODAPPAView.class, this);
        jButton2.setAction(actionMap.get("m1")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jta.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jta.setText(resourceMap.getString("jta.text")); // NOI18N
        jta.setName("jta"); // NOI18N
        jta.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jtaCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtaInputMethodTextChanged(evt);
            }
        });
        jta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtaKeyTyped(evt);
            }
        });

        jtb.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jtb.setText(resourceMap.getString("jtb.text")); // NOI18N
        jtb.setName("jtb"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jadd.setText(resourceMap.getString("jadd.text")); // NOI18N
        jadd.setName("jadd"); // NOI18N
        jadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaddActionPerformed(evt);
            }
        });

        jac.setText(resourceMap.getString("jac.text")); // NOI18N
        jac.setName("jac"); // NOI18N

        tom.setBackground(resourceMap.getColor("tom.background")); // NOI18N
        tom.setFont(resourceMap.getFont("tom.font")); // NOI18N
        tom.setForeground(resourceMap.getColor("tom.foreground")); // NOI18N
        tom.setText(resourceMap.getString("tom.text")); // NOI18N
        tom.setName("tom"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(table_no, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(table_no_cp, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(126, 126, 126)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(jtb, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jac)
                                .addGap(26, 26, 26)
                                .addComponent(jadd)
                                .addGap(21, 21, 21))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(tom, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(283, 283, 283)
                        .addComponent(jb1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(table_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(table_no_cp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtb, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jadd))))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb1)
                    .addComponent(jButton2)
                    .addComponent(tom, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(225, 225, 225))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void jaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaddActionPerformed
     
       model=(DefaultTableModel) jt1.getModel();
       if(jta.getText().equalsIgnoreCase("ptm")) 
       {
           rate=110;
           qty=Integer.parseInt(jtb.getText());
       }
       else if(jta.getText().equalsIgnoreCase("c"))
       {
           
           rate=15;
           qty=Integer.parseInt(jtb.getText());
       }
       model.addRow(new Object[]{jac.getText(),jtb.getText(),rate,rate*qty});
        // TODO add your handling code here:
      String w="#"+jac.getText()+"#"+jtb.getText()+"#"+rate+"#"+(rate*qty);
      int table_int=Integer.parseInt(table_no.getText());
      hm.put(table_int,w);
      tamount=tamount+(rate*qty);
tom.setText(" "+tamount);
      jta.setText(null);
       jtb.setText(null);
       jac.setText(null);
       rate=0;
       
    }//GEN-LAST:event_jaddActionPerformed

    private void jtaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaKeyTyped

        if(jta.getText().equalsIgnoreCase("ptm"))
        {
         jac.setText("paneer tika masala");
        
        }
        else if(jta.getText().equalsIgnoreCase("pmm"))
        {
         jac.setText("paneer mutter masala");
        
        }
        else if(jta.getText().equalsIgnoreCase("rt"))
        {
         jac.setText("Roti");
        
        }
        else if(jta.getText().equalsIgnoreCase("c"))
        {
         jac.setText("chapati");
        
        }
        
            // TODO add your handling code here:
    }//GEN-LAST:event_jtaKeyTyped

    private void table_no_cpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_no_cpKeyPressed
    
       table_no_cp.setText(table_no.getText());
          
        // TODO add your handling code here:
    }//GEN-LAST:event_table_no_cpKeyPressed

    private void table_no_cpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_no_cpKeyTyped
        // TODO add your handling code here:
       table_no_cp.setText(table_no.getText());

    }//GEN-LAST:event_table_no_cpKeyTyped

    private void table_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_noKeyTyped
       table_no_cp.setText(table_no.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_table_noKeyTyped

    private void table_noInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_table_noInputMethodTextChanged
    table_no_cp.setText(table_no.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_table_noInputMethodTextChanged

    private void jtaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtaInputMethodTextChanged

        
                
        // TODO add your handling code here:
    }//GEN-LAST:event_jtaInputMethodTextChanged

    private void jtaCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtaCaretPositionChanged

        // TODO add your handling code here:
    }//GEN-LAST:event_jtaCaretPositionChanged

    private void jtaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaKeyPressed


        if(jta.getText().equalsIgnoreCase("ptm"))
        {
         jac.setText("paneer tika masala");
        
        }
        else if(jta.getText().equalsIgnoreCase("pmm"))
        {
         jac.setText("paneer mutter masala");
        
        }
        else if(jta.getText().equalsIgnoreCase("rt"))
        {
         jac.setText("Roti");
        
        }
        else if(jta.getText().equalsIgnoreCase("c"))
        {
         jac.setText("chapati");
        
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jtaKeyPressed

    private void jb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb1ActionPerformed
       
        table_no.setText(null);        
    
         model=(DefaultTableModel) jt1.getModel();
    
       while(model.getRowCount()>0){
       for(int i=0;i<model.getRowCount();i++)
      {
        model.removeRow(i);
      }
        /*for(Map.Entry m:hm.entrySet()){  
   System.out.println(m.getKey()+" "+m.getValue());  
  jtb.setText(" "+m.getValue());
   }*/  
       }    // TODO add your handling code here:
    }//GEN-LAST:event_jb1ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jac;
    private javax.swing.JButton jadd;
    private javax.swing.JButton jb1;
    private javax.swing.JTable jt1;
    private javax.swing.JTextField jta;
    private javax.swing.JTextField jtb;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField table_no;
    private javax.swing.JTextField table_no_cp;
    private javax.swing.JLabel tom;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
